plugins {
    id 'java-library'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

javafx {
    version = '16'
    modules = ['javafx.controls']
    configuration = 'compileOnly'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

version = "0.1.0"

dependencies {
    compileOnly "org.lifecompanion:lc-app:$lifecompanionAppVersion"
    // If you need to add plugin dependencies, add them with "implementation"
    // Note that you should check that the dependency is not already integrated in LifeCompanion core (if so, use "compileOnly" instead
}

// Enter your plugin meta data
jar {
    duplicatesStrategy DuplicatesStrategy.WARN
    manifest {
        attributes(
                "LifeCompanion-Plugin-Class": "org.lifecompanion.plugin.officialexample.OfficialExamplePlugin",
                "LifeCompanion-Plugin-Package-Scanning-Base": "org.lifecompanion.plugin.officialexample",
                "LifeCompanion-Plugin-Id": "lc-example-plugin",
                "LifeCompanion-Plugin-Author": "LifeCompanion",
                "LifeCompanion-Plugin-Version": project.version,
                "LifeCompanion-Plugin-Build-Date": new Date().getTime(),
                "LifeCompanion-Plugin-Name": "Extension démo (officiel)",
                "LifeCompanion-Plugin-Description": "Ceci est une démonstration permettant de montrer ce qu'il est possible de faire avec les extensions dans LifeCompanion",
                "LifeCompanion-Min-App-Version": "$lifecompanionAppVersion"
        )
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
