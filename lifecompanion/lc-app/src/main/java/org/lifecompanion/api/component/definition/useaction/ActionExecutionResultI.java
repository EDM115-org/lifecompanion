/*
 * LifeCompanion AAC and its sub projects
 *
 * Copyright (C) 2014 to 2019 Mathieu THEBAUD
 * Copyright (C) 2020 to 2021 CMRRF KERPAPE (Lorient, France)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.lifecompanion.api.component.definition.useaction;

import java.util.Map;

import org.lifecompanion.api.component.definition.useevent.UseVariableI;

/**
 * Represent the action execution result.<br>
 * Inform the user in the callback of action type done.<br>
 * The subclass must be only immutable dto.
 * @author Mathieu THEBAUD <math.thebaud@gmail.com>
 */
public interface ActionExecutionResultI {

	/**
	 * @return if all the action weren't well executed
	 */
	public boolean isErrorOnExecution();

	/**
	 * @return the executed action count (number of action)
	 */
	public int getActionExecutedCount();

	/**
	 * @return true if at least one moving action was executed
	 */
	public boolean isMovingActionExecuted();

	/**
	 * @return the map that contains every variables given and generated by the executed actions
	 */
	public Map<String, UseVariableI<?>> executedActionVariables();
}
